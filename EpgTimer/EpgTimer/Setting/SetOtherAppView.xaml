<UserControl x:Class="EpgTimer.Setting.SetOtherAppView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:local="clr-namespace:EpgTimer" d:DataContext="{d:DesignInstance local:Settings}"
             d:DesignHeight="500" d:DesignWidth="780">

    <TabControl Name="tabControl">
        <TabItem Header="TVTest連携" Name="tabItem_tvtest">
            <StackPanel Margin="10,10,6,6" >
                <Label Content="※利用にはTVtestに EpgTimerPlugIn.tvtp か EdcbPlugIn.tvtp を追加しておく必要があります。&#10;※NetworkTVモードには EpgTimerPlugIn.tvtp が必要です。" />
                <DockPanel Margin="0,6,0,0">
                    <Label Content="TVTest.exeパス" Width="{Binding ActualWidth, ElementName=label_cmdline}" />
                    <Button DockPanel.Dock="Right" Content="開く" Name="button_exe" />
                    <TextBox Margin="0,0,6,0" Text="{Binding TvTestExe, UpdateSourceTrigger=PropertyChanged}" Name="textBox_exe"/>
                </DockPanel>
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <Label Content="コマンドライン引数 " Name="label_cmdline" />
                    <TextBox Margin="0,0,6,0" Text="{Binding TvTestCmd}" Width="{Binding ActualWidth, ElementName=textBox_exe}" />
                </StackPanel>
                <DockPanel Margin="0,6,0,0">
                    <TextBlock Width="{Binding ActualWidth, ElementName=label_cmdline}" />
                    <TextBlock Text="(BonDriverに関するオプションは自動的に付加されます)" />
                </DockPanel>
                <Label Content="視聴に使用するBonDriver" Name="label3" Margin="0,12,0,0"/>
                <DockPanel>
                    <StackPanel>
                        <DockPanel Width="300" HorizontalAlignment="Left" >
                            <StackPanel Width="44" DockPanel.Dock="Right" Name="panel_bonButtons">
                                <Button Content="↑" Name="button_up" />
                                <Button Content="↓" Margin="0,4,0,0" Name="button_down" />
                                <Button Content="削除" Margin="0,4,0,0" Name="button_del" />
                            </StackPanel>
                            <ListBox Name="listBox_bon" Margin="0,0,4,0" SelectionMode="Extended" />
                        </DockPanel>
                        <DockPanel Width="300" Margin="0,4,0,0" HorizontalAlignment="Left">
                            <Button Content="追加" Name="button_add" Width="44" DockPanel.Dock="Right" />
                            <ComboBox Name="comboBox_bon" Margin="0,0,4,0" />
                        </DockPanel>
                    </StackPanel>
                    <StackPanel Margin="36,0,0,0" >
                        <StackPanel Orientation="Horizontal">
                            <Label Content="TvTestの起動待ち時間" Width="{Binding ActualWidth, ElementName=label_wait_bon}"/>
                            <TextBox Margin="6,0,0,0" Width="62" Text="{Binding TvTestOpenWait, Converter={StaticResource vcheck},ConverterParameter='12000,0'}"/>
                            <Label Content="ミリ秒" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,6,0,0" >
                            <Label Content="BonDriverの切り替え待ち時間" Name="label_wait_bon"/>
                            <TextBox Margin="6,0,0,0" Width="62" Text="{Binding TvTestChgBonWait, Converter={StaticResource vcheck},ConverterParameter='12000,0'}"/>
                            <Label Content="ミリ秒" />
                        </StackPanel>
                    </StackPanel>
                </DockPanel>
                <CheckBox Margin="0,12,0,0" Content="NetworkTVモード(録画用アプリやEpgTimerSrvからのUDP、TCP送信)で視聴する" IsChecked="{Binding NwTvMode}"/>
                <Label Margin="0,6,0,0" Content="NetworkTVモードの送信方式 (NetworkTVモードでファイル再生する場合もチェックが必要です)" />
                <CheckBox Content="UDP有効 (BonDriver__UDP.dll)" Margin="18,2,0,0" IsChecked="{Binding NwTvModeUDP}"/>
                <CheckBox Content="TCP有効 (BonDriver__TCP.dll)" Margin="18,6,0,0" IsChecked="{Binding NwTvModeTCP}"/>
                <CheckBox Content="Pipe方式 (BonDriver__NetworkPipe.dll) ※ローカル通信専用" Margin="38,6,0,0" IsChecked="{Binding NwTvModePipe}" IsEnabled="{Binding NwTvModeTCP}"/>
            </StackPanel>
        </TabItem>
        <TabItem Header="ファイル再生" Name="tabItem_play">
            <StackPanel Margin="10,10,6,6" >
                <CheckBox Content="有効にする (未チェック時、TVTest連携のパスが指定されていればNetworkTVモードで再生を試みます)" IsChecked="{Binding FilePlay}" Margin="0,6,0,0" />
                <CheckBox Content="追っかけ再生にも使用する" Margin="18,6,0,0"  IsChecked="{Binding FilePlayOnAirWithExe}" IsEnabled="{Binding FilePlay}" />
                <DockPanel Margin="0,6,0,0">
                    <Label Content="再生アプリのexeパス" Name="label_app_path" IsEnabled="{Binding FilePlay}" />
                    <Button DockPanel.Dock="Right" Content="開く" Name="button_playExe" />
                    <local:TextBoxWithReadOnlyEffect Margin="6,0" x:Name="textBox_playExe" Text="{Binding FilePlayExe, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding FilePlay, Converter={StaticResource invert}}"/>
                </DockPanel>
                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                    <Label Content="コマンドライン引数" Width="{Binding ActualWidth, ElementName=label_app_path}" IsEnabled="{Binding FilePlay}" />
                    <local:TextBoxWithReadOnlyEffect Margin="6,0" Text="{Binding FilePlayCmd}" IsReadOnly="{Binding FilePlay, Converter={StaticResource invert}}" Width="{Binding ActualWidth, ElementName=textBox_playExe}" />
                </StackPanel>
                <DockPanel Margin="0,6,0,0" IsEnabled="{Binding FilePlay}" >
                    <TextBlock Width="{Binding ActualWidth, ElementName=label_app_path}" />
                    <TextBlock Margin="12,0" TextWrapping="Wrap" Text="再生アプリのexeパスが未指定の場合は規定の再生アプリを使用します。&#10;コマンドラインでは、$FilePath$:(パス+ファイル名)、$FileNameExt$:(ファイル名のみ)、が使用出来ます。&#10;　※再生アプリが未指定の場合も、コマンドラインをファイル名として展開します。&#10;　※空白は$FilePath$相当です。&#10;&#10;(参考)「再生アプリのexeパス」「コマンドライン引数」とも空白にしておくと、録画ファイルを関連付けで開きます。" />
                </DockPanel>
                <CheckBox Content="録画済みファイルのパスを置換する" IsChecked="{Binding FilePathReplaceRecFile}" Margin="0,26,0,0" ToolTip="録画後にファイルを移動している場合などに利用できます。&#10;なお、EpgTimerNWでこのオプションを有効にした場合、録画済みファイルに対してはEpgTimerSrvからのUNCパス取得を行いません。" />
                <Label IsEnabled="{Binding FilePathReplaceRecFile}" Content="ファイルパスの文字列置換リスト（/置換前/置換後/…） ※録画済み一覧画面の「録画フォルダを開く」機能にも適用されます" />
                <local:TextBoxWithReadOnlyEffect Margin="6,0" x:Name="textBox_replacePattern" Text="{Binding FilePathReplacePattern}" TextChanged="replaceTest_TextChanged" IsReadOnly="{Binding FilePathReplaceRecFile, Converter={StaticResource invert}}"/>
                <DockPanel Margin="0,6,0,0">
                    <Label IsEnabled="{Binding FilePathReplaceRecFile}" Content="（置換テスト）" Name="label_repTest" />
                    <local:TextBoxWithReadOnlyEffect Margin="6,0" x:Name="textBox_replaceTest" Text="{Binding FilePathReplaceTestPath}" TextChanged="replaceTest_TextChanged" IsReadOnly="{Binding FilePathReplaceRecFile, Converter={StaticResource invert}}"/>
                </DockPanel>
                <DockPanel Margin="0,6,0,0">
                    <Label IsEnabled="{Binding FilePathReplaceRecFile}" Content="（置換結果）"  Width="{Binding ActualWidth, ElementName=label_repTest}"/>
                    <local:TextBoxWithReadOnlyEffect Margin="6,0" IsReadOnly="True" x:Name="textBox_replaceTestResult" />
                </DockPanel>
            </StackPanel>
        </TabItem>
    </TabControl>
</UserControl>
